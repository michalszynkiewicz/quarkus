name: Quarkus CI

on:
  push:
    branches-ignore:
      - 'dependabot/**'
    paths-ignore:
      - 'docs/src/main/asciidoc/**'
      - 'README.md'
      - 'CONTRIBUTING.md'
      - 'ADOPTERS.md'
      - 'TROUBLESHOOTING.md'
      - 'MAINTAINERS.adoc'
      - 'LICENSE.txt'
      - 'dco.txt'
      - '.github/ISSUE_TEMPLATE/**'
      - '.github/autoissuelabeler.yml'
      - '.github/boring-cyborg.yml'
      - '.github/NativeBuildReport.java'
      - '.dependabot/**'
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    paths-ignore:
      - 'docs/src/main/asciidoc/**'
      - 'README.md'
      - 'CONTRIBUTING.md'
      - 'ADOPTERS.md'
      - 'TROUBLESHOOTING.md'
      - 'LICENSE.txt'
      - 'dco.txt'
      - '.github/ISSUE_TEMPLATE/**'
      - '.github/autoissuelabeler.yml'
      - '.github/boring-cyborg.yml'
      - '.github/NativeBuildReport.java'
      - '.dependabot/**'

env:
  # Workaround testsuite locale issue
  LANG: en_US.UTF-8
  NATIVE_TEST_MAVEN_OPTS: "-B --settings .github/mvn-settings.xml --fail-at-end -Dquarkus.native.container-build=true -Dtest-postgresql -Dtest-elasticsearch -Dtest-keycloak -Dtest-amazon-services -Dtest-db2 -Dtest-mysql -Dtest-mariadb -Dmariadb.base_url='jdbc:mariadb://localhost:3308' -Dmariadb.url='jdbc:mariadb://localhost:3308/hibernate_orm_test'  -Dtest-mssql -Dtest-vault -Dtest-neo4j -Dtest-kafka -Dtest-redis -Dnative-image.xmx=5g -Dnative -Dformat.skip install"
  JVM_TEST_MAVEN_OPTS: "-e -B --settings .github/mvn-settings.xml -Dtest-postgresql -Dtest-elasticsearch -Dtest-db2 -Dtest-mysql -Dtest-mariadb -Dmariadb.base_url='jdbc:mariadb://localhost:3308' -Dmariadb.url='jdbc:mariadb://localhost:3308/hibernate_orm_test'  -Dtest-mssql -Dtest-amazon-services -Dtest-vault -Dtest-neo4j -Dtest-kafka -Dtest-keycloak -Dtest-redis -Dformat.skip"
  DB_USER: hibernate_orm_test
  DB_PASSWORD: hibernate_orm_test
  DB_NAME: hibernate_orm_test
jobs:
  build-jdk11:
    name: "JDK 11 Build"
    runs-on: ubuntu-latest
    # Skip draft PRs and those with WIP in the subject, rerun as soon as its removed
    if: "github.event_name != 'pull_request' || ( \
           github.event.pull_request.draft == false && \
           github.event.pull_request.state != 'closed' && \
           contains(github.event.pull_request.title, 'wip ') == false && \
           contains(github.event.pull_request.title, '[wip]') == false && \
           (
             github.event.action != 'edited' || \
             contains(github.event.changes.title.from, 'wip ') || \
             contains(github.event.changes.title.from, '[wip]') \
           ) \
         )"
    steps:
      - uses: actions/checkout@v2
      - uses: n1hility/cancel-previous-runs@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      #      - name: Reclaim Disk Space
      #        run: .github/ci-prerequisites.sh
      - name: Set up JDK 11
        # Uses sha for added security since tags can be updated
        uses: joschi/setup-jdk@b9cc6eabf7e7e3889766b5cee486f874c9e1bd2d
        with:
          java-version: 11
      #      - name: Compute cache restore key
      #        # Always recompute on a push so that the maven repo doesnt grow indefinitely with old versions
      #        run: |
      #          if ${{ github.event_name == 'pull_request' }}; then echo "::set-env name=COMPUTED_RESTORE_KEY::q2maven-"; fi
      #      - name: Cache Maven Repository
      #        id: cache-maven
      #        uses: n1hility/cache@v2
      #        with:
      #          path: ~/.m2/repository
      #          # Improves the reusability of the cache to limit key changes
      #          key: q2maven-${{ hashFiles('bom/runtime/pom.xml') }}
      #          restore-keys: ${{ env.COMPUTED_RESTORE_KEY }}
      #          restore-only: ${{ github.event_name == 'pull_request' }}
      - name: Build
        run: |
          mvn -e -B -DskipTests -DskipITs -Dno-format clean install -DskipDocs -Dquickly -pl '!integration-tests'
      - name: Tar Maven Repo
        shell: bash
        run: tar -czf maven-repo.tgz -C ~ .m2/repository
      - name: Persist Maven Repo
        uses: actions/upload-artifact@v1
        with:
          name: maven-repo
          path: maven-repo.tgz
  #
  linux-jvm-gradle-tests:
    name: JDK ${{matrix.java.name}} JVM Gradle Tests
    runs-on: ubuntu-latest
    needs: build-jdk11
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        java:
          #          - { name: Java8,
          #              java-version: 8
          #          }
          #          - {
          #            name: "Java 8 - 242",
          #            java-version: 8,
          #            release: "jdk8u242-b08"
          #          }
          - {
            name: Java 11,
            java-version: 11
          }
    #          - {
    #            name: Java 14,
    #            java-version: 14
    #          }
    steps:
      - uses: actions/checkout@v2
      - name: Download Maven Repo
        uses: actions/download-artifact@v1
        with:
          name: maven-repo
          path: .
      - name: Extract Maven Repo
        shell: bash
        run: tar -xzf maven-repo.tgz -C ~
      - name: Build with Gradle
        uses: eskatos/gradle-command-action@v1
        env:
          GRADLE_OPTS: -Xmx2048m
        with:
          gradle-version: wrapper
          wrapper-directory: integration-tests/gradle
          build-root-directory: integration-tests/gradle
          arguments: clean test -i -S --stacktrace --no-daemon

#  windows-jdk11-jvm-gradle-tests:
#    name: Windows JDK 11 JVM Gradle Tests
#    needs: build-jdk11
#    runs-on: windows-latest
#    timeout-minutes: 60
#
#    steps:
#      - uses: actions/checkout@v2
#      - name: Set up JDK 11
#        # Uses sha for added security since tags can be updated
#        uses: joschi/setup-jdk@b9cc6eabf7e7e3889766b5cee486f874c9e1bd2d
#        with:
#          java-version: 11
#      - name: Download Maven Repo
#        uses: actions/download-artifact@v1
#        with:
#          name: maven-repo
#          path: .
#      - name: Extract Maven Repo
#        shell: bash
#        run: tar -xzf maven-repo.tgz -C ~
#      - name: Build with Gradle
#        uses: eskatos/gradle-command-action@v1
#        env:
#          GRADLE_OPTS: -Xmx1408m
#        with:
#          gradle-version: wrapper
#          wrapper-directory: integration-tests/gradle
#          build-root-directory: integration-tests/gradle
#          arguments: clean test -i -S --stacktrace --no-daemon